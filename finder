import time
from selenium import webdriver
from selenium.webdriver.support.ui import Select
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.by import By
import smtplib
import pyautogui

email = "x"
password = "x"
zipcode = "x"
distance = "10 miles" #options here are 10, 25, 50, 100

class TestSatChecker():
    def setup_method(self):
        s = Service(r'') #path to chrome driver
        self.driver = webdriver.Chrome(service=s)
        self.driver.implicitly_wait(20)
        self.vars = {}
        self.actions = ActionChains(self.driver)

    def teardown_method(self):
        self.driver.quit()
        
    def test_sat_checker(self):
        self.driver.get("https://account.collegeboard.org/login/login")
        
        time.sleep(3)

        dropdown = self.driver.find_element(By.ID, "idp-discovery-username")
        dropdown.send_keys(email)

        next = self.driver.find_element(By.ID, "idp-discovery-submit")
        next.click()

        time.sleep(3)
        
        dropdown = self.driver.find_element(By.ID, "okta-signin-password")
        dropdown.send_keys(password)
        
        time.sleep(2)
        
        next = self.driver.find_element(By.ID, "okta-signin-submit")
        next.click()
        
        time.sleep(5)
        
        self.driver.get("https://mysat.collegeboard.org/dashboard")
        
        time.sleep(5)
        
        next = self.driver.find_element(By.ID, "qc-id-header-register-button")
        next.click()
        
        time.sleep(7)
        
        next = self.driver.find_element(By.ID, "qc-id-getstarted-button-getstarted")
        next.click()
        
        time.sleep(7)
        
        next = self.driver.find_element(By.ID, "qc-id-personalinfo-button-graddateconfirm")
        next.click()
        next = self.driver.find_element(By.ID, "qc-id-personalinfo-button-gradeconfirm")
        next.click()
        
        time.sleep(4)

        next = self.driver.find_element(By.ID, "qc-id-photoupload-confirmphoto-button-continue")
        next.click()

        time.sleep(4)
        
        next = self.driver.find_element(By.ID, "qc-id-studentquestionnaire-button-saveexit-enabled")
        next.click()
        
        time.sleep(5)
        
        next = self.driver.find_element(By.ID, "qc-id-selectdatecenter-button-getstarted")
        next.click()
        
        time.sleep(2)
        
        div_element = self.driver.find_element(By.ID, "qc-id-termsconditions-scrollbox-termsconditions")
        self.driver.execute_script("arguments[0].scrollTop = arguments[0].scrollHeight;", div_element)
        
        time.sleep(0.5)
        
        next = self.driver.find_element(By.ID, "qc-id-termsconditions-checkbox-acceptterms")
        next.click()
        
        time.sleep(0.5)

        next = self.driver.find_element(By.ID, "qc-id-termsconditions-button-continue")
        next.click()
        
        time.sleep(2)

        next = self.driver.find_element(By.ID, "qc-id-selectdatecenter-testlocation-button-next")
        next.click()
            
        time.sleep(1)
        
        next = self.driver.find_element(By.ID, "qc-id-selectdatecenter-testdate-button-AUG-24")
        next.click()
        
        time.sleep(1)
        
        next = self.driver.find_element(By.ID, "testdate-continue-button")
        next.click()
        
        time.sleep(5)

        try:
            dropdown = Select(self.driver.find_element(By.ID, "apricot_select_34"))
            time.sleep(1)
            dropdown.select_by_visible_text("75 miles")
        except:
            return
        
        
        time.sleep(1)
        
        next = self.driver.find_element(By.ID, "qc-id-selectdatecenter-testcenter-domestic-button-search")
        next.click()

        time.sleep(3)
        
        next = self.driver.find_element(By.ID, "qc-id-selectdatecenter-testcenter-toggle-showavailableonly")
        next.click()
        
        time.sleep(1)
        
        for i in range(10000000):
            try:
                next.click()
                
                time.sleep(1)
                
                button = self.driver.find_element(By.ID, "#qc-id-selectdatecenter-testcenter-button-select-0")
                button.click()
                
                                
                button = self.driver.find_element(By.ID, "qc-id-confirmtestdetails-button-continue")
                button.click()

                s = smtplib.SMTP('smtp.gmail.com', 587)
                s.starttls()
                s.login("x", "x")
            
                message = "Test centers available"
                s.sendmail("x","x",message)

                s.quit()
                
                time.sleep(1)
                
                button = self.driver.find_element(By.ID, "qc-id-selectdatecenter-button-continue")
                button.click()
                
                time.sleep(1)
                
                button = self.driver.find_element(By.ID, "anchor-state")
                button.click()
                
                time.sleep(5)

                return
            except:
                continue

        



checker = TestSatChecker()

checker.setup_method()
checker.test_sat_checker()
checker.teardown_method()
